version: 2.1
executors:
  node-executor:
    docker:
      - image: circleci/node:12.18.3
commands:
  gatsby-build:
    steps:
      - restore_cache:
          name: Restore Yarn Cache
          keys:
            - yarn-packages-{{ checksum "yarn.lock" }}
      # - restore_cache:
      #     name: Restore Gatsby Cache
      #     keys:
      #       - v1-gatsby-cache-
      - run:
          name: Install Dependencies
          command: yarn install --immutable
      - run:
          name: Building production files
          command: yarn build
      - save_cache:
          name: Save Yarn Package Cache
          key: yarn-packages-{{ checksum "yarn.lock" }}
          paths:
            - ~/.cache/yarn
      - save_cache:
          name: Save Gatsby Cache
          key: v1-gatsby-cache-{{ epoch }}
          paths:
            - ./node_modules
            - ./gatsby/node_modules
            # - ./gatsby/.cache
            # - ./gatsby/public
  tar-file:
    steps:
      - run:
          name: Creating tar file for deployment
          command: tar -czvf $COMPRESS_FILE -C $BUILD_DIR .
      - store_artifacts:
          path: build.tar.gz
  tar-file-deploy:
    steps:
      - run:
          name: Deploy tar file to production
          shell: /bin/sh
          command: scp -P $HOST_PORT -v $COMPRESS_FILE $REMOTE_CONNECTION
  update-website:
    steps:
      - run:
          name: Installing dependancies
          command: |
            sudo apt-get update
            sudo apt-get -y install gettext-base
            sudo apt-get -y install locate
      - run:
          name: Preparing bash file for deployment
          command: envsubst '${REMOTE_DIR} ${TEMP_DIR} ${COMPRESS_FILE}' < update_website.sh > update_website_out.sh
      - run:
          shell: /bin/sh
          name: Running bash in remote server
          command: ssh -p $HOST_PORT $HOST_USER@$HOST_SERVER "bash -s" < update_website_out.sh
workflows:
  version: 2
  build-deploy:
    jobs:
      - build:
          filters:
            branches:
              only:
                - master
jobs:
  build:
    executor: node-executor
    steps:
      - add_ssh_keys:
          fingerprints:
            - "52:66:0b:05:8a:e3:0b:a2:32:e1:bd:95:07:8b:ab:bb"
      - run:
          name: Add ssh key to known hosts
          command: ssh-keyscan $HOST_SERVER >> ~/.ssh/known_hosts
      - checkout
      - gatsby-build
      - tar-file
      - tar-file-deploy
      - update-website